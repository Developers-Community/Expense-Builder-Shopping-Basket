[{"F:\\Gamica Cloud\\React\\my-app\\src\\App.tsx":"1","F:\\Gamica Cloud\\React\\my-app\\src\\index.tsx":"2","F:\\Gamica Cloud\\React\\my-app\\src\\components\\ProductsScreen.tsx":"3","F:\\Gamica Cloud\\React\\my-app\\src\\redux\\index.ts":"4","F:\\Gamica Cloud\\React\\my-app\\src\\redux\\state.ts":"5","F:\\Gamica Cloud\\React\\my-app\\src\\components\\BasketScreen.tsx":"6","F:\\Gamica Cloud\\React\\my-app\\src\\redux\\basketSlice.ts":"7"},{"size":650,"mtime":1606434595080,"results":"8","hashOfConfig":"9"},{"size":333,"mtime":1606266250857,"results":"10","hashOfConfig":"9"},{"size":1626,"mtime":1606433589139,"results":"11","hashOfConfig":"9"},{"size":1524,"mtime":1606434391898,"results":"12","hashOfConfig":"9"},{"size":2213,"mtime":1606276607648,"results":"13","hashOfConfig":"9"},{"size":1942,"mtime":1606434403909,"results":"14","hashOfConfig":"9"},{"size":2040,"mtime":1606433897561,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a2shuj",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Gamica Cloud\\React\\my-app\\src\\App.tsx",[],"F:\\Gamica Cloud\\React\\my-app\\src\\index.tsx",[],"F:\\Gamica Cloud\\React\\my-app\\src\\components\\ProductsScreen.tsx",[],"F:\\Gamica Cloud\\React\\my-app\\src\\redux\\index.ts",["31"],"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\"\r\n\r\nimport basketSlice from \"./basketSlice\"\r\n\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: basketSlice\r\n\r\n})\r\n\r\n\r\n// middleware: [...getDefaultMiddleware()]\r\n// export const store = configureStore({\r\n//     reducer: {\r\n//         basket: basketSlice\r\n//     },\r\n// })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { createSlice, configureStore } from \"@reduxjs/toolkit\"\r\n// import { INITIAL_STATE } from \"./state\"\r\n\r\n// const basketSlice = createSlice({\r\n//     name: \" Shopping basket\",\r\n//     initialState: INITIAL_STATE,\r\n//     reducers: {\r\n//         addToBasket: (state, action) => {\r\n//             return state.map(itm => {\r\n//                 if (itm.id !== action.payload.id) {\r\n//                     return itm\r\n//                 }\r\n//                 return {\r\n//                     ...itm,\r\n//                     added: true\r\n//                 }\r\n//             })\r\n//         },\r\n//         removeToBasket: (state, action) => {\r\n//             return state.map(itm => {\r\n//                 if (itm.id !== action.payload.id) {\r\n//                     return itm\r\n//                 }\r\n//                 return {\r\n//                     ...itm,\r\n//                     added: false\r\n//                 }\r\n//             })\r\n//         }\r\n//     }\r\n\r\n// })\r\n\r\n\r\n// const store = configureStore({ reducer: basketSlice.reducer })\r\n// export const { addToBasket, removeToBasket } = basketSlice.actions\r\n// export { basketSlice, store }\r\n\r\n","F:\\Gamica Cloud\\React\\my-app\\src\\redux\\state.ts",[],"F:\\Gamica Cloud\\React\\my-app\\src\\components\\BasketScreen.tsx",[],"F:\\Gamica Cloud\\React\\my-app\\src\\redux\\basketSlice.ts",["32","33"],{"ruleId":"34","severity":1,"message":"35","line":1,"column":26,"nodeType":"36","messageId":"37","endLine":1,"endColumn":46},{"ruleId":"34","severity":1,"message":"38","line":1,"column":10,"nodeType":"36","messageId":"37","endLine":1,"endColumn":26},{"ruleId":"34","severity":1,"message":"39","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":13},"@typescript-eslint/no-unused-vars","'getDefaultMiddleware' is defined but never used.","Identifier","unusedVar","'createAsyncThunk' is defined but never used.","'Axios' is defined but never used."]